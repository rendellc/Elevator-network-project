Git:
  In order to pull submodules:
    First time: git submodule update --init --recursive
    Afterwards: git submodule update --recursive

Build simulator:
dmd -w -g src/sim_server.d src/timer_event.d -ofSimElevatorServer

Build ElevatorServer
cargo install --force ttk4145_elevator_server

Package loss:
iptables -A INPUT -i eno1 -m statistic -p udp --mode random --probability 0.25 -j DROP


TODO:
  Code REVIEW
  Readme
  Release
  Final test

README:
  How to write a Readme : https://gist.github.com/PurpleBooth/109311bb0361f32d87a2
  Template: See file Readme.md
	How to get
	Usage
		make + how to run
	Flags:
		id
		addr (optional)
	System?
		Master-Slave (per order)
Add a README.md (or add to your README.md) where you describe what kind of libraries/code you've used that you're not the author of. Feel free to add other relevant info to the README.md as well
	3rd party code:
		go-nonblockingchannels (as is)
		elevio module (as is)
		comm module (modified)
		Simulator-v2
		elevator-server

Questions to Studass:
  Can the elevator box be turned off ?
  Is OK to print to the terminal ?
  How should we run the code on other computers ?

Tests:
    - Elevator/Network for one module down
    - Elevator/Network for one module down temporarily and then comes back
    - Kill program and start again
    - Block elevator manually: By pressing button and holding elevator
    - Disregarded orders:
          If placed order is disregarded more than X times after T seconds
          (no acks received), then this elevator takes order.
    - Turning off elevator power, disconnecting motor wires

CODE REVIEW:
  Names of variables, modules, functions, data types, channels
  Simplify modules
  Succession functions are presented
  When defyning struct variables use {..., VariableMemberName: VariableMemberValue, ...}
  Review how lights are updated
  Channel names

  main: XYZOrderMsg type ->

  FSM:
      Necessary to test if button is valid before turning on light
      Delete len(completedHallOrders)>0
      Final review

DONE:
  synchronize lights
  outsourcing
  just ID as flag
  automatic discovery of networks
  no lost connection due to inactivity
  retransmition of some messages
